{"ast":null,"code":"var _jsxFileName = \"E:\\\\MY PROJECTS\\\\CMS\\\\client\\\\src\\\\components\\\\TemplateEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemplateEditor = () => {\n  _s();\n  const {\n    templateName\n  } = useParams();\n  const [templateContent, setTemplateContent] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch template content from the server\n    fetch(`/api/templates/${templateName}`).then(response => response.json()).then(data => setTemplateContent(data.content)).catch(error => console.error(error));\n  }, [templateName]);\n  const handleSave = () => {\n    // Save template content to the server\n    fetch('/api/saveTemplate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        templateName,\n        templateContent\n      })\n    }).then(() => navigate('/')).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Edit Template - \", templateName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"10\",\n      value: templateContent,\n      onChange: e => setTemplateContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Template\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(TemplateEditor, \"Jy97WJPUNe4mxXad/X+vqc+bZrA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TemplateEditor;\nexport default TemplateEditor;\nvar _c;\n$RefreshReg$(_c, \"TemplateEditor\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","TemplateEditor","_s","templateName","templateContent","setTemplateContent","navigate","fetch","then","response","json","data","content","catch","error","console","handleSave","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["E:/MY PROJECTS/CMS/client/src/components/TemplateEditor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst TemplateEditor = () => {\r\n    const { templateName } = useParams();\r\n    const [templateContent, setTemplateContent] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Fetch template content from the server\r\n        fetch(`/api/templates/${templateName}`)\r\n            .then(response => response.json())\r\n            .then(data => setTemplateContent(data.content))\r\n            .catch(error => console.error(error));\r\n    }, [templateName]);\r\n\r\n    const handleSave = () => {\r\n        // Save template content to the server\r\n        fetch('/api/saveTemplate', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ templateName, templateContent }),\r\n        })\r\n            .then(() => navigate('/'))\r\n            .catch(error => console.error(error));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Edit Template - {templateName}</h2>\r\n            <textarea\r\n                rows=\"10\"\r\n                value={templateContent}\r\n                onChange={e => setTemplateContent(e.target.value)}\r\n            ></textarea>\r\n            <br />\r\n            <button onClick={handleSave}>Save Template</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TemplateEditor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAa,CAAC,GAAGN,SAAS,CAAC,CAAC;EACpC,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMW,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ;IACAW,KAAK,CAAE,kBAAiBJ,YAAa,EAAC,CAAC,CAClCK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIN,kBAAkB,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC,CAC9CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACX,YAAY,CAAC,CAAC;EAElB,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACrB;IACAT,KAAK,CAAC,mBAAmB,EAAE;MACvBU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAElB,YAAY;QAAEC;MAAgB,CAAC;IAC1D,CAAC,CAAC,CACGI,IAAI,CAAC,MAAMF,QAAQ,CAAC,GAAG,CAAC,CAAC,CACzBO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,oBACId,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,GAAI,kBAAgB,EAACnB,YAAY;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvC1B,OAAA;MACI2B,IAAI,EAAC,IAAI;MACTC,KAAK,EAAExB,eAAgB;MACvByB,QAAQ,EAAEC,CAAC,IAAIzB,kBAAkB,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACZ1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN1B,OAAA;MAAQgC,OAAO,EAAEhB,UAAW;MAAAM,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEd,CAAC;AAACxB,EAAA,CAtCID,cAAc;EAAA,QACSJ,SAAS,EAEjBC,WAAW;AAAA;AAAAmC,EAAA,GAH1BhC,cAAc;AAwCpB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}